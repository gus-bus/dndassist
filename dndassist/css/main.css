:root {
    --primary-color: #313131;
}


/* Reset the box-sizing model https://css-tricks.com/box-sizing/*/
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

/*reset margins to 0 and set the main font family */
body {
    font-family: 'Noto Sans JP', sans-serif;
    color: #333;
    line-height: 1.6;
    /*background-color: var(--primary-color);*/
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
    color: #333;
}

a:hover {
    border-bottom: 2px white solid;
}

h1, h2 {
    font-weight: 300;
    line-height: 1.2;
    margin: 10px 0;
}

p {
    margin: 10px 0;
}

img {
    /*width: 100%; /*Keep images in container*/
    height: auto;
    display: block;
}

/*Hero Image*/
.hero {
    color: white;
    text-align: center;
    padding: 16em 0;
    background-image:
        url(../heroimage.jpg),
        radial-gradient(#555, #333);
    background-blend-mode: multiply;
    background-attachment: fixed;
}

.primary-title {
    font-family: 'Berkshire Swash', cursive;
    font-size: 14rem;
    font-size: clamp(3rem, 5vw + 1rem, 14.5rem);
    line-height: 1;
    text-transform: uppercase;
    color: gold;
}

/*Navbar*/
.navbar {
    background-color: var(--primary-color);
    color: white;
    height: 68px;
    top: 0; /*Required for the sticky navbar; affects the vertical position of a positioned element*/
    position: sticky;
    z-index: 4;
}

.navbar .flex {
    justify-content: center; /**/
}

.navbar ul {
    display: flex;
}

.navbar li {
    cursor: pointer;
}

.navbar a {
    color: #fff;
    padding: 10px;
    margin: 0 5px;
}

.navbar .a:hover {
    border-bottom: 2px #fff solid;
}

.goldInfo {
    display: none;
    padding-top: 50px;;
}

.goldInfo p {
    display: inline;
    line-height: 0;
}

.goldInfo a:hover {
    text-decoration: none;
    cursor: pointer;
}

.charInfo input[type='number']{
    max-width: 160px;
    height: 21px;
}

.charInfo input[type='button']{
    min-width: 20px;
    background-color: goldenrod;
    color: #333;
    font-weight: 100;
}

/*Cards*/
.cards {
    background-color: var(--primary-color);
    color: #fff;
    position: relative;
    padding: 85px 0;
    min-height: 1000px;
}

.cards h1 {
    font-size: 40px;
}

.cards p{
    margin: 20px 0;
}

.char h1{
    font-size: 50px;
    font-family: 'Rye', cursive;
    text-align: center;
}

.char img {
    max-width: 250px;
    margin: 0 auto;
}

/*Utilities*/
.container { 
    max-width: 1800px;
    margin: 0 auto;
    overflow: auto;
    padding: 0 40px;
}

/* flex-direction sets the main axis of the flex container; which affects direction of content spacing (e.g. justify-content: center); default is the x-axis*/
.flex {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

/*grid-template-columns is specifices how the columns will be split/distributed; below have specified that it will be split into 6 equal fractions
gap is used to separate the grid columns*/
.grid {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 30px;
    justify-content: center;
    /*align-items: center; this is commented out, want to have the cards aligned from the top vertically*/
    height: 100%;
}

.subscript {
    font-style: italic;
    padding-left: 10px;
}

.btn {
    display: inline-block;
    text-decoration: none;
    color: var(--clr-text, #fff);
    font-weight: 700;
    text-transform: uppercase;
    font-size: 1.125rem;
    padding: .5em 1.25em;
    background: var(--clr-accent, blue);
    border-radius: .25em;
}

.class-ability img{
    display: inline-block;
}

.btninc {
    background: green;
    padding: .5em 1.25em;
    outline-style: none;
}

.btndec {
    background: red;
    padding: .5em 1.25em;
}

.abilityPage {
    cursor: pointer;
}

.abilityPage p:hover {
    color: gold;
}

.tooltip{
    position: relative;
}
  
.tooltip::before,
.tooltip::after {
    --scale: 0;
    position: absolute;
    top: -.25rem;
    left: -35%;
    transform: translateX(-62%) translateY(-100%) scale(var(--scale));
    transition: 100ms transform;
    transform-origin: bottom center;
}

.tooltip::before {
    content: attr(data-tooltip);
    color: white;
    padding: .5rem;
    border-radius: .3rem;
    text-align: left;
    background: #666;
}

.tooltip:hover::before,
.tooltip:hover::after{
    --scale: 1;
}

.tooltipAlt{
    position: relative;
}
  
.tooltipAlt::before,
.tooltipAlt::after {
    --scale: 0;
    position: absolute;
    top: -.25rem;
    left: 45%;
    transform: translateX(-62%) translateY(-100%) scale(var(--scale));
    transition: 100ms transform;
    transform-origin: bottom center;
}

.tooltipAlt::before {
    content: attr(data-tooltipAlt);
    color: white;
    padding: .5rem;
    border-radius: .3rem;
    text-align: left;
    background: #666;
}

.tooltipAlt:hover::before,
.tooltipAlt:hover::after{
    --scale: 1;
}

#sorcIcon, 
#sorcIcon1, 
#sorcIcon2, 
#sorcIcon3, 
#sorcIcon4, 
#rogueIcon, 
#clericIcon, 
#barbIcon, 
#barbIcon1, 
#barbIcon2, 
#monkIcon, 
#monkIcon1, 
#monkIcon2, 
#monkIcon3, 
#monkIcon4, 
#druidIcon, 
#druidIcon1 {
    max-width: 40px;
    max-height: 40px;
    margin-top: 10px;
}

.sorcSpellWindow h2 {
    margin: 0 auto ;
}

/* Customize the label (the container) */
.hellothere {
    display: block;
    position: relative;
    padding-top: -120px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default checkbox */
  .hellothere input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 15px;
    width: 15px;
    background-color: #eee;
    border-radius: 25px;
  }
  
  /* On mouse-over, add a grey background color */
  .hellothere:hover input ~ .checkmark {
    background-color: #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .hellothere input:checked ~ .checkmark {
    background-color: red;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  